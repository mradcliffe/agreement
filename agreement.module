<?php

/**
 * @file
 * Agreement module code - agreement.module.
 *
 * Module allows the administrator to force a user role to accept an agreement
 * before accessing any site content.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_user_update().
 */
function agreement_user_update(EntityInterface $account) {
  /** @var \Drupal\user\Entity\User $account */
  if ($account->getEntityTypeId() === 'user') {
    $current_user = \Drupal::currentUser();
    $agreements = \Drupal::entityTypeManager()->getStorage('agreement')->loadMultiple();
    /** @var \Drupal\agreement\Entity\Agreement $agreement */
    foreach ($agreements as $agreement) {
      // Do not require user to re-accept agreement if they've just changed
      // their password.
      $settings = $agreement->getSettings();
      if ($settings['frequency'] === 0 &&
          isset($account->original) &&
          $account->checkExistingPassword($account->original) &&
          $current_user->id() === $account->id()) {
        \Drupal::service('agreement.handler')->agree($account, $agreement, 2);
      }
    }
  }
}

/**
 * Implements hook_mail().
 */
function agreement_mail($key, &$message, $params) {
  switch ($key) {
    case 'notice':
      /** @var \Drupal\Core\Session\AccountInterface $account */
      $account = $params['account'];
      /** @var \Drupal\agreement\Entity\Agreement $agreement */
      $agreement = $params['context']['agreement'];

      $variables = array(
        '%site_name' => \Drupal::config('system.site')->get('name'),
        '%username' => $account->getDisplayName(),
        '%agreement' => $agreement->label(),
      );
      $message['subject'] = t('%site_name: %username accepted %agreement', $variables, array('langcode' => $message['language']->language));
      $message['body'][] = t('The user has accepted the agreement, %agreement.', $variables);

      break;
  }
}
